{"version":3,"sources":["Components/Button/Button.module.scss","Components/Input/Input.module.scss","Constants/route.tsx","Components/Card/index.tsx","Components/Button/index.tsx","Components/Input/index.tsx","Components/InputContainer/index.tsx","Components/InputForm/index.tsx","Components/Portal/index.tsx","Route/CardForm/CardFormPresenter.tsx","Route/CardForm/CardFormContainer.tsx","Route/CardForm/index.tsx","App.tsx","index.tsx"],"names":["module","exports","holee-button","input-container","ROUTE","CardHeader","_ref","children","react_default","a","createElement","className","CardBody","_ref2","_ref2$cardBodyNumberF","cardBodyNumberFirst","_ref2$cardBodyNumberS","cardBodyNumberSecond","_ref2$cardBodyNumberT","cardBodyNumberThird","_ref2$cardBodyNumberF2","cardBodyNumberFourth","padEnd","repeat","length","join","CardFooter","_ref3","name","month","year","Card","_ref4","onClick","onKeyUp","cardColor","cardHeaderText","cardFooterName","cardFooterMonth","cardFooterYear","rest","Object","objectWithoutProperties","_excluded","color","assign","role","tabIndex","style","backgroundColor","Card_CardHeader","Card_CardBody","Card_CardFooter","cx","classNames","bind","styles","Button","_ref$type","type","Button_excluded","Input","_ref$className","_ref$name","onChange","_ref$placeholder","placeholder","_ref$width","width","maxLength","concat","InputContainer","InputForm","inputContainerClassName","inputFormTitle","inputFormErrorMessage","containerWidth","Components_InputContainer_InputContainer","Portal","selector","$modalRoot","document","getElementById","el","useEffect","appendChild","removeChild","ReactDOM","createPortal","CardFormBodyNumber","Components_InputForm_InputForm","Input_Input","CardFormExpirationDate","CardFormOwnerName","CardFormCVC","CardFormPassword","_ref5","CardCompanyItem","_ref6","data-company","data-color","CardModal","_ref7","data","Portal_Portal","map","_ref8","CardFormPresenter_CardCompanyItem","key","CardFormPresenter","_ref9","openPortal","handleChangeCardInfo","handleClickCardCompanyItem","Button_Button","Components_Card_Card","CardFormPresenter_CardFormBodyNumber","CardFormPresenter_CardFormExpirationDate","CardFormPresenter_CardFormOwnerName","CardFormPresenter_CardFormCVC","CardFormPresenter_CardFormPassword","CardFormPresenter_CardModal","CardFormContainer","_useState","useState","companyName","companyColor","numberFirst","numberSecond","numberThird","numberFourth","expirationDateMonth","expirationDateYear","ownerName","cvc","passwordFirst","passwordSecond","passwordThird","passwordFourth","nickname","_useState2","slicedToArray","cardFormInputs","setCardFormInputs","prev","objectSpread2","CardForm_CardFormPresenter","e","target","value","defineProperty","console","log","persist","dataset","company","App","react_router_dom","react_router","exact","path","Route_CardForm","render","src_App_0"],"mappings":"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","file":"static/js/main.492ef749.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"holee-button\":\"Button_holee-button__2lOsu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-container\":\"Input_input-container__zY7Fz\"};","export const ROUTE = {\n  HOME: '/',\n  CARD_LIST: '/cardList',\n  CARD_FORM: '/cardForm',\n  CARD_FORM_COMPLETE: '/cardForm/Complete',\n};\n","import React, { ReactNode } from 'react';\nimport './Card.scss';\n\nconst CardHeader = ({ children }: { children: string | undefined }) => {\n  return (\n    <div className=\"card-header\">\n      <div className=\"card-header__text\">{children ? children : ''} 카드</div>\n    </div>\n  );\n};\n\ninterface CardBodyProps {\n  cardBodyNumberFirst: string | undefined;\n  cardBodyNumberSecond: string | undefined;\n  cardBodyNumberThird: string | undefined;\n  cardBodyNumberFourth: string | undefined;\n}\n\nconst CardBody = ({\n  cardBodyNumberFirst = '',\n  cardBodyNumberSecond = '',\n  cardBodyNumberThird = '',\n  cardBodyNumberFourth = '',\n}: CardBodyProps) => {\n  return (\n    <div className=\"card-body\">\n      <div className=\"card-body__ic-chip\"></div>\n      <div className=\"card-body__number\">\n        {[\n          cardBodyNumberFirst.padEnd(4, '_'),\n          '-',\n          cardBodyNumberSecond.padEnd(4, '_'),\n          '-',\n          '*'.repeat(cardBodyNumberThird.length).padEnd(4, '_'),\n          '-',\n          '*'.repeat(cardBodyNumberFourth.length).padEnd(4, '_'),\n        ].join('')}\n      </div>\n    </div>\n  );\n};\n\ninterface CardFooterProps {\n  name: string | undefined;\n  month: string | undefined;\n  year: string | undefined;\n}\n\nconst CardFooter = ({ name, month, year }: CardFooterProps) => {\n  return (\n    <div className=\"card-footer\">\n      <span className=\"card-footer__name\">{name ? name : 'NAME'}</span>\n      <span className=\"card-footer__expiration-date\">\n        {month ? month : 'MM'}/{year ? year : 'YY'}\n      </span>\n    </div>\n  );\n};\n\n// type?: 'preview' | 'modify' | undefined;\nexport interface CardProps {\n  children?: ReactNode;\n  className?: string;\n  onClick?: any;\n  onKeyUp?: any;\n  cardColor: string;\n  cardHeaderText?: string;\n  cardBodyNumberFirst: string | undefined;\n  cardBodyNumberSecond: string | undefined;\n  cardBodyNumberThird: string | undefined;\n  cardBodyNumberFourth: string | undefined;\n  cardFooterName: string | undefined;\n  cardFooterMonth: string | undefined;\n  cardFooterYear: string | undefined;\n}\n\nexport const Card = ({\n  onClick,\n  onKeyUp,\n  cardColor,\n  cardHeaderText,\n  cardBodyNumberFirst,\n  cardBodyNumberSecond,\n  cardBodyNumberThird,\n  cardBodyNumberFourth,\n  cardFooterName,\n  cardFooterMonth,\n  cardFooterYear,\n  ...rest\n}: CardProps) => {\n  const color = cardColor ? cardColor : '#d2d2d2';\n  return (\n    <div\n      className=\"card\"\n      onClick={onClick}\n      role=\"button\"\n      tabIndex={0}\n      onKeyUp={onKeyUp}\n      style={{ backgroundColor: color }}\n      {...rest}\n    >\n      <CardHeader>{cardHeaderText}</CardHeader>\n      <CardBody\n        cardBodyNumberFirst={cardBodyNumberFirst}\n        cardBodyNumberSecond={cardBodyNumberSecond}\n        cardBodyNumberThird={cardBodyNumberThird}\n        cardBodyNumberFourth={cardBodyNumberFourth}\n      ></CardBody>\n      <CardFooter name={cardFooterName} month={cardFooterMonth} year={cardFooterYear}></CardFooter>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './Button.module.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nexport interface ButtonOptions {\n  className?: string;\n  type?: 'button' | 'submit' | 'reset';\n  // onClick?: ((event: React.MouseEvent<HTMLButtonElement>) => void) | undefined;\n  // onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onClick?: any;\n  isDisabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport const Button = ({ className, type = 'submit', children, onClick, ...rest }: ButtonOptions) => {\n  return (\n    <button className={cx('holee-button', className)} type={type} onClick={onClick} {...rest}>\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\n// import React, { forwardRef } from 'react';\n\nimport styles from './Input.module.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nexport interface InputProps {\n  className?: string | undefined;\n  name?: string | undefined;\n  placeholder?: string | undefined;\n  width?: string | undefined;\n  onChange?: any;\n  maxLength?: number;\n  type?:\n    | 'button'\n    | 'checkbox'\n    | 'color'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'file'\n    | 'hidden'\n    | 'image'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'radio'\n    | 'range'\n    | 'reset'\n    | 'search'\n    | 'submit'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week'\n    | 'datetime';\n}\n\n// const Input = forwardRef(({ className = '', placeholder = '', width = '' }: InputProps, ref: any) => {\n//   return (\n//     <input\n//       className={cx('input-container', className)}\n//       placeholder={placeholder}\n//       style={{ width: `${width}` }}\n//       ref={ref}\n//     />\n//   );\n// });\n\n// Input.displayName = 'holee-input';\n\nconst Input = ({\n  className = '',\n  name = '',\n  onChange,\n  placeholder = '',\n  width = '',\n  maxLength,\n  type = 'text',\n}: InputProps) => {\n  return (\n    <input\n      className={cx('input-container', className)}\n      name={name}\n      onChange={onChange}\n      placeholder={placeholder}\n      style={{ width: `${width}` }}\n      type={type}\n      maxLength={maxLength}\n    />\n  );\n};\n\nexport { Input };\n","import React, { ReactNode } from 'react';\nimport './InputContainer.scss';\n\nexport interface InputContainerProps {\n  children?: ReactNode | undefined;\n  className?: string | undefined;\n  width?: string | undefined;\n}\n\nexport const InputContainer = ({ children, className, width = '100%' }: InputContainerProps) => {\n  return (\n    <div className={`input-container ${className}`} style={{ width: `${width}` }}>\n      {children}\n    </div>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport './InputForm.scss';\nimport { InputContainer } from '../InputContainer';\n\nexport interface InputFormProps {\n  children?: ReactNode | undefined;\n  className?: string | undefined;\n  inputContainerClassName?: string | undefined;\n  inputFormTitle?: string | undefined;\n  inputFormErrorMessage?: string | undefined;\n  containerWidth?: string | undefined;\n}\n\nexport const InputForm = ({\n  children,\n  inputContainerClassName,\n  inputFormTitle,\n  inputFormErrorMessage,\n  containerWidth,\n}: InputFormProps) => {\n  return (\n    <div className=\"input-form\">\n      <div className=\"input-form__header\">\n        <label className=\"input-form__header-title\">{inputFormTitle}</label>\n        <span className=\"input-form__header-validation-message\">{inputFormErrorMessage}</span>\n      </div>\n      <InputContainer className={inputContainerClassName} width={containerWidth}>\n        {children}\n      </InputContainer>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './portal.scss';\n\nconst Portal = ({ children }: { children?: React.ReactNode }) => {\n  const $ = (selector: string) => document.getElementById(selector);\n  const $modalRoot = $('portal-root') as HTMLDivElement;\n\n  const el = document.createElement('div');\n  useEffect(() => {\n    $modalRoot.appendChild(el);\n    return () => {\n      $modalRoot.removeChild(el);\n    };\n  }, [el]);\n  return ReactDOM.createPortal(children, el);\n};\n\nexport { Portal };\n","import React from 'react';\nimport { Card, Button, Input, InputForm, Portal } from '../../Components';\nimport './CardForm.scss';\n\nconst CardFormBodyNumber = ({ onChange }: { onChange: any }) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-number-container\"\n      inputFormTitle=\"카드번호\"\n      inputFormErrorMessage=\"error message\"\n    >\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberFirst\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={4}\n      />\n      <span className=\"card-form__body-number-seperator\">-</span>\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberSecond\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={4}\n      />\n      <span className=\"card-form__body-number-seperator\">-</span>\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberThird\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={4}\n      />\n      <span className=\"card-form__body-number-seperator\">-</span>\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberFourth\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={4}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormExpirationDate = ({ onChange }: { onChange: any }) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-expiration-date-container\"\n      inputFormTitle=\"만료일\"\n      inputFormErrorMessage=\"error message\"\n      containerWidth=\"5.6rem\"\n    >\n      <Input\n        className=\"card-form__body-expiration-date-input\"\n        name=\"expirationDateMonth\"\n        onChange={onChange}\n        width=\"1.5rem\"\n        placeholder=\"MM\"\n        maxLength={2}\n      />\n      <span className=\"card-form__body-expiration-date-seperator\">/</span>\n      <Input\n        className=\"card-form__body-expiration-date-input\"\n        name=\"expirationDateYear\"\n        onChange={onChange}\n        width=\"1.5rem\"\n        placeholder=\"YY\"\n        maxLength={2}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormOwnerName = ({ onChange }: { onChange: any }) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-owner-name-container\"\n      inputFormTitle=\"카드 소유자 이름(선택)\"\n      inputFormErrorMessage=\"error message\"\n    >\n      <Input\n        className=\"card-form__body-owner-name-input\"\n        name=\"ownerName\"\n        onChange={onChange}\n        placeholder=\"카드에 표시된 이름과 동일하게 입력하세요.\"\n        width=\"19rem\"\n        maxLength={20}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormCVC = ({ onChange }: { onChange: any }) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-cvc-container\"\n      inputFormTitle=\"보안 코드(CVC/CVV)\"\n      inputFormErrorMessage=\"error message\"\n      containerWidth=\"3.2rem\"\n    >\n      <Input\n        className=\"card-form__body-cvc-input\"\n        name=\"cvc\"\n        onChange={onChange}\n        placeholder=\"CVC\"\n        width=\"2rem\"\n        maxLength={3}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormPassword = ({ onChange }: { onChange: any }) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-password-container\"\n      inputFormTitle=\"카드 비밀번호\"\n      inputFormErrorMessage=\"error message\"\n      containerWidth=\"8.5rem\"\n    >\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordFirst\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={1}\n      />\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordSecond\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={1}\n      />\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordThird\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={1}\n      />\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordFourth\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={1}\n      />\n    </InputForm>\n  );\n};\n\nconst CardCompanyItem = ({ color, name, onClick }: { color: string; name: string; onClick: any }) => {\n  return (\n    <div className=\"card-company-item\">\n      <button\n        className=\"card-company-item__color\"\n        style={{ backgroundColor: color }}\n        onClick={onClick}\n        data-company={name}\n        data-color={color}\n      ></button>\n      <p className=\"card-company-item__name\">{name}</p>\n    </div>\n  );\n};\n\ninterface CardModalProps {\n  color: string;\n  name: string;\n}\n\nconst CardModal = ({ data, onClick }: { data: CardModalProps[]; onClick?: any }) => {\n  return (\n    <Portal>\n      <div className=\"portal\">\n        <div className=\"card-list\">\n          {data.map(({ name, color }) => (\n            <CardCompanyItem key={name} name={name} color={color} onClick={onClick} />\n          ))}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\ninterface CardFormPresenterProps {\n  data: CardModalProps[];\n  cardColor: string;\n  cardHeaderText: string;\n  cardBodyNumberFirst: string;\n  cardBodyNumberSecond: string;\n  cardBodyNumberThird: string;\n  cardBodyNumberFourth: string;\n  cardFooterMonth: string;\n  cardFooterYear: string;\n  cardFooterName: string;\n  openPortal: boolean;\n  handleChangeCardInfo: any;\n  handleClickCardCompanyItem: any;\n}\n\nconst CardFormPresenter = ({\n  data,\n  cardColor,\n  cardHeaderText,\n  cardBodyNumberFirst,\n  cardBodyNumberSecond,\n  cardBodyNumberThird,\n  cardBodyNumberFourth,\n  cardFooterMonth,\n  cardFooterYear,\n  cardFooterName,\n  openPortal,\n  handleChangeCardInfo,\n  handleClickCardCompanyItem,\n}: CardFormPresenterProps) => {\n  return (\n    <div className=\"card-form\">\n      <div className=\"card-form__header\">\n        <Button className=\"card-form__header-button\" type=\"button\">\n          {'<'}\n        </Button>\n        <span className=\"card-form__header-title\">카드 추가</span>\n      </div>\n      <div className=\"card-form__body\">\n        <Card\n          cardColor={cardColor}\n          cardHeaderText={cardHeaderText}\n          cardBodyNumberFirst={cardBodyNumberFirst}\n          cardBodyNumberSecond={cardBodyNumberSecond}\n          cardBodyNumberThird={cardBodyNumberThird}\n          cardBodyNumberFourth={cardBodyNumberFourth}\n          cardFooterMonth={cardFooterMonth}\n          cardFooterYear={cardFooterYear}\n          cardFooterName={cardFooterName}\n        ></Card>\n        <CardFormBodyNumber onChange={handleChangeCardInfo} />\n        <CardFormExpirationDate onChange={handleChangeCardInfo} />\n        <CardFormOwnerName onChange={handleChangeCardInfo} />\n        <CardFormCVC onChange={handleChangeCardInfo} />\n        <CardFormPassword onChange={handleChangeCardInfo} />\n      </div>\n      <div className=\"card-form__footer\">\n        <Button className=\"card-form__footer-button\" type=\"submit\">\n          제출 완료\n        </Button>\n      </div>\n      {openPortal ? <CardModal data={data} onClick={handleClickCardCompanyItem} /> : ''}\n    </div>\n  );\n};\n\nexport default CardFormPresenter;\n","import React, { useState, useEffect } from 'react';\nimport CardFormPresenter from './CardFormPresenter';\n\nconst data = [\n  { name: 'NH농협', color: 'yellow' },\n  { name: 'KB국민', color: 'orange' },\n  { name: '신한', color: '#94dacd' },\n  { name: '우리', color: 'skyblue' },\n  { name: '하나', color: '#74bc6d' },\n  { name: 'IBK기업', color: '#547ce4' },\n  { name: 'SC제일', color: 'pink' },\n  { name: '씨티', color: '#e24141' },\n];\n\nconst CardFormContainer = () => {\n  const [cardFormInputs, setCardFormInputs] = useState({\n    companyName: '',\n    companyColor: '',\n    numberFirst: '',\n    numberSecond: '',\n    numberThird: '',\n    numberFourth: '',\n    expirationDateMonth: '',\n    expirationDateYear: '',\n    ownerName: '',\n    cvc: '',\n    passwordFirst: '',\n    passwordSecond: '',\n    passwordThird: '',\n    passwordFourth: '',\n    nickname: '',\n    openPortal: false,\n  });\n\n  useEffect(() => {\n    if (cardFormInputs.numberFirst.length === 4 && cardFormInputs.numberSecond.length === 4) {\n      setCardFormInputs((prev) => ({ ...prev, openPortal: true }));\n    }\n    return () => {\n      setCardFormInputs((prev) => ({ ...prev, openPortal: false }));\n    };\n  }, [cardFormInputs.numberFirst, cardFormInputs.numberSecond]);\n\n  const handleChangeCardInfo = (e: Event) => {\n    const { value, name } = e.target as HTMLInputElement;\n    setCardFormInputs((prev) => ({ ...prev, [name]: value }));\n    console.log(cardFormInputs);\n  };\n\n  const handleClickCardCompanyItem = (e: any) => {\n    e.persist();\n    setCardFormInputs((prev) => ({\n      ...prev,\n      companyName: e.target.dataset.company,\n      companyColor: e.target.dataset.color,\n      openPortal: false,\n    }));\n  };\n  return (\n    <CardFormPresenter\n      data={data}\n      cardColor={cardFormInputs.companyColor}\n      cardHeaderText={cardFormInputs.companyName}\n      cardBodyNumberFirst={cardFormInputs.numberFirst}\n      cardBodyNumberSecond={cardFormInputs.numberSecond}\n      cardBodyNumberThird={cardFormInputs.numberThird}\n      cardBodyNumberFourth={cardFormInputs.numberFourth}\n      cardFooterMonth={cardFormInputs.expirationDateMonth}\n      cardFooterYear={cardFormInputs.expirationDateYear}\n      cardFooterName={cardFormInputs.ownerName}\n      handleChangeCardInfo={handleChangeCardInfo}\n      handleClickCardCompanyItem={handleClickCardCompanyItem}\n      openPortal={cardFormInputs.openPortal}\n    />\n  );\n};\n\nexport default CardFormContainer;\n","import CardFormContainer from './CardFormContainer';\nexport default CardFormContainer;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport './App.scss';\nimport { ROUTE } from './Constants';\nimport CardForm from './Route/CardForm';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"app__layout\">\n        <Router>\n          <Switch>\n            <Route exact path={[ROUTE.HOME, ROUTE.CARD_LIST]}>\n              <CardForm />\n            </Route>\n            <Route path={ROUTE.CARD_FORM}>\n              <CardForm />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}