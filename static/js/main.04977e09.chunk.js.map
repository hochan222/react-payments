{"version":3,"sources":["Components/Button/Button.module.scss","Components/Input/Input.module.scss","Constants/route.tsx","Constants/message.tsx","Components/Card/index.tsx","Components/Button/index.tsx","Components/Input/index.tsx","Components/InputContainer/index.tsx","Components/InputForm/index.tsx","Components/Portal/index.tsx","Route/CardForm/CardFormPresenter.tsx","Constants/card.tsx","Route/CardForm/CardFormContainer.tsx","Route/CardForm/index.tsx","App.tsx","index.tsx"],"names":["module","exports","holee-button","input-container","ROUTE","ERROR","CardHeader","_ref","children","react_default","a","createElement","className","CardBody","_ref2","_ref2$cardBodyNumberF","cardBodyNumberFirst","_ref2$cardBodyNumberS","cardBodyNumberSecond","_ref2$cardBodyNumberT","cardBodyNumberThird","_ref2$cardBodyNumberF2","cardBodyNumberFourth","padEnd","repeat","length","join","CardFooter","_ref3","name","month","year","toUpperCase","Card","_ref4","onClick","onKeyUp","cardColor","cardHeaderText","cardFooterName","cardFooterMonth","cardFooterYear","rest","Object","objectWithoutProperties","_excluded","color","assign","role","tabIndex","style","backgroundColor","Card_CardHeader","Card_CardBody","Card_CardFooter","cx","classNames","bind","styles","Button","_ref$type","type","Button_excluded","Input","React","forwardRef","ref","_ref$className","_ref$name","onChange","_ref$placeholder","placeholder","_ref$width","width","maxLength","Input_excluded","concat","displayName","InputContainer","InputForm","inputContainerClassName","inputFormTitle","inputFormErrorMessage","containerWidth","Components_InputContainer_InputContainer","Portal","selector","$modalRoot","document","getElementById","el","useEffect","appendChild","removeChild","ReactDOM","createPortal","CardFormBodyNumber","refNumberFirst","refNumberSecond","refNumberThird","refNumberFourth","errorMessage","Components_InputForm_InputForm","CardFormExpirationDate","refExpirationDateMonth","refExpirationDateYear","CardFormOwnerName","refOwnerName","CardFormCVC","refCvc","CardFormPassword","_ref5","refPasswordFirst","refPasswordSecond","refPasswordThird","refPasswordFourth","CardCompanyItem","_ref6","data-company","data-color","CardModal","_ref7","data","Portal_Portal","map","_ref8","CardFormPresenter_CardCompanyItem","key","CardFormPresenter","_ref9","openPortal","handleChangeCardInfo","handleClickCardCompanyItem","cardBodyNumberErrorMessage","cardFooterNameErrorMessage","cardFooterExpirationDateErrorMessage","cardCVCErrorMessage","cardPasswordErrorMessage","Button_Button","Components_Card_Card","CardFormPresenter_CardFormBodyNumber","CardFormPresenter_CardFormExpirationDate","CardFormPresenter_CardFormOwnerName","CardFormPresenter_CardFormCVC","CardFormPresenter_CardFormPassword","CardFormPresenter_CardModal","CardFormContainer","_useState","useState","companyName","companyColor","numberFirst","numberSecond","numberThird","numberFourth","expirationDateMonth","expirationDateYear","ownerName","cvc","passwordFirst","passwordSecond","passwordThird","passwordFourth","nickname","_useState2","slicedToArray","cardFormInputs","setCardFormInputs","useRef","nextRef","current","focus","prev","objectSpread2","changeCurrentInput","target","value","moveInputFocus","checkValidIntegerInput","Number","isSafeInteger","Fragment","CardForm_CardFormPresenter","e","prevValue","substring","includes","defineProperty","test","checkValidStringInput","_objectSpread9","checkErrorMessage","persist","dataset","company","App","react_router_dom","basename","react_router","exact","path","Route_CardForm","render","src_App_0"],"mappings":"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","file":"static/js/main.04977e09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"holee-button\":\"Button_holee-button__2lOsu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-container\":\"Input_input-container__zY7Fz\"};","export const ROUTE = {\n  HOME: '/',\n  CARD_LIST: '/cardList',\n  CARD_FORM: '/cardForm',\n  CARD_FORM_COMPLETE: '/cardForm/Complete',\n};\n","export const ERROR = {\n  VOID_INPUT: '빈칸을 모두 입력해주세요.',\n  INVALID_EXPIRATION_DATE_MONTH: '유효한 달을 입력해주세요.',\n};\n","import React, { ReactNode } from 'react';\nimport './Card.scss';\n\nconst CardHeader = ({ children }: { children: string | undefined }) => {\n  return (\n    <div className=\"card-header\">\n      <div className=\"card-header__text\">{children ? children : ''} 카드</div>\n    </div>\n  );\n};\n\ninterface CardBodyProps {\n  cardBodyNumberFirst: string | undefined;\n  cardBodyNumberSecond: string | undefined;\n  cardBodyNumberThird: string | undefined;\n  cardBodyNumberFourth: string | undefined;\n}\n\nconst CardBody = ({\n  cardBodyNumberFirst = '',\n  cardBodyNumberSecond = '',\n  cardBodyNumberThird = '',\n  cardBodyNumberFourth = '',\n}: CardBodyProps) => {\n  return (\n    <div className=\"card-body\">\n      <div className=\"card-body__ic-chip\"></div>\n      <div className=\"card-body__number\">\n        {[\n          cardBodyNumberFirst.padEnd(4, '_'),\n          '-',\n          cardBodyNumberSecond.padEnd(4, '_'),\n          '-',\n          '*'.repeat(cardBodyNumberThird.length).padEnd(4, '_'),\n          '-',\n          '*'.repeat(cardBodyNumberFourth.length).padEnd(4, '_'),\n        ].join('')}\n      </div>\n    </div>\n  );\n};\n\ninterface CardFooterProps {\n  name: string | undefined;\n  month: string | undefined;\n  year: string | undefined;\n}\n\nconst CardFooter = ({ name, month, year }: CardFooterProps) => {\n  return (\n    <div className=\"card-footer\">\n      <span className=\"card-footer__name\">{name ? name.toUpperCase() : 'NAME'}</span>\n      <span className=\"card-footer__expiration-date\">\n        {month ? month : 'MM'}/{year ? year : 'YY'}\n      </span>\n    </div>\n  );\n};\n\n// type?: 'preview' | 'modify' | undefined;\nexport interface CardProps {\n  children?: ReactNode;\n  className?: string;\n  onClick?: any;\n  onKeyUp?: any;\n  cardColor: string;\n  cardHeaderText?: string;\n  cardBodyNumberFirst: string | undefined;\n  cardBodyNumberSecond: string | undefined;\n  cardBodyNumberThird: string | undefined;\n  cardBodyNumberFourth: string | undefined;\n  cardFooterName: string | undefined;\n  cardFooterMonth: string | undefined;\n  cardFooterYear: string | undefined;\n}\n\nexport const Card = ({\n  onClick,\n  onKeyUp,\n  cardColor,\n  cardHeaderText,\n  cardBodyNumberFirst,\n  cardBodyNumberSecond,\n  cardBodyNumberThird,\n  cardBodyNumberFourth,\n  cardFooterName,\n  cardFooterMonth,\n  cardFooterYear,\n  ...rest\n}: CardProps) => {\n  const color = cardColor ? cardColor : '#d2d2d2';\n  return (\n    <div\n      className=\"card\"\n      onClick={onClick}\n      role=\"button\"\n      tabIndex={0}\n      onKeyUp={onKeyUp}\n      style={{ backgroundColor: color }}\n      {...rest}\n    >\n      <CardHeader>{cardHeaderText}</CardHeader>\n      <CardBody\n        cardBodyNumberFirst={cardBodyNumberFirst}\n        cardBodyNumberSecond={cardBodyNumberSecond}\n        cardBodyNumberThird={cardBodyNumberThird}\n        cardBodyNumberFourth={cardBodyNumberFourth}\n      ></CardBody>\n      <CardFooter name={cardFooterName} month={cardFooterMonth} year={cardFooterYear}></CardFooter>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './Button.module.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nexport interface ButtonOptions {\n  className?: string;\n  type?: 'button' | 'submit' | 'reset';\n  // onClick?: ((event: React.MouseEvent<HTMLButtonElement>) => void) | undefined;\n  // onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onClick?: any;\n  isDisabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport const Button = ({ className, type = 'submit', children, onClick, ...rest }: ButtonOptions) => {\n  return (\n    <button className={cx('holee-button', className)} type={type} onClick={onClick} {...rest}>\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\n\nimport styles from './Input.module.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\nconst INPUT_MAXLENGTH = 1000;\n\nexport interface InputProps {\n  className?: string | undefined;\n  name?: string | undefined;\n  placeholder?: string | undefined;\n  width?: string | undefined;\n  onChange?: any;\n  maxLength?: number;\n  type?:\n    | 'button'\n    | 'checkbox'\n    | 'color'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'file'\n    | 'hidden'\n    | 'image'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'radio'\n    | 'range'\n    | 'reset'\n    | 'search'\n    | 'submit'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week'\n    | 'datetime';\n  autoFocus?: boolean;\n}\n\nconst Input = React.forwardRef(\n  (\n    {\n      className = '',\n      name = '',\n      onChange,\n      placeholder = '',\n      width = '',\n      maxLength,\n      type = 'text',\n      ...rest\n    }: InputProps,\n    ref?: React.Ref<HTMLInputElement>,\n  ) => {\n    return (\n      <input\n        className={cx('input-container', className)}\n        name={name}\n        onChange={onChange}\n        placeholder={placeholder}\n        style={{ width: `${width}` }}\n        type={type}\n        maxLength={maxLength ? maxLength : INPUT_MAXLENGTH}\n        {...rest}\n        ref={ref ? ref : null}\n      />\n    );\n  },\n);\n\nInput.displayName = 'holee-input';\n\nexport { Input };\n","import React, { ReactNode } from 'react';\nimport './InputContainer.scss';\n\nexport interface InputContainerProps {\n  children?: ReactNode | undefined;\n  className?: string | undefined;\n  width?: string | undefined;\n}\n\nexport const InputContainer = ({ children, className, width = '100%' }: InputContainerProps) => {\n  return (\n    <div className={`input-container ${className}`} style={{ width: `${width}` }}>\n      {children}\n    </div>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport './InputForm.scss';\nimport { InputContainer } from '../InputContainer';\n\nexport interface InputFormProps {\n  children?: ReactNode | undefined;\n  className?: string | undefined;\n  inputContainerClassName?: string | undefined;\n  inputFormTitle?: string | undefined;\n  inputFormErrorMessage?: string | undefined;\n  containerWidth?: string | undefined;\n}\n\nexport const InputForm = ({\n  children,\n  inputContainerClassName,\n  inputFormTitle,\n  inputFormErrorMessage,\n  containerWidth,\n}: InputFormProps) => {\n  return (\n    <div className=\"input-form\">\n      <div className=\"input-form__header\">\n        <label className=\"input-form__header-title\">{inputFormTitle}</label>\n        <span className=\"input-form__header-validation-message\">{inputFormErrorMessage}</span>\n      </div>\n      <InputContainer className={inputContainerClassName} width={containerWidth}>\n        {children}\n      </InputContainer>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './portal.scss';\n\nconst Portal = ({ children }: { children?: React.ReactNode }) => {\n  const $ = (selector: string) => document.getElementById(selector);\n  const $modalRoot = $('portal-root') as HTMLDivElement;\n\n  const el = document.createElement('div');\n  useEffect(() => {\n    $modalRoot.appendChild(el);\n    return () => {\n      $modalRoot.removeChild(el);\n    };\n  }, [el]);\n  return ReactDOM.createPortal(children, el);\n};\n\nexport { Portal };\n","import React from 'react';\nimport { Card, Button, Input, InputForm, Portal } from '../../Components';\nimport {\n  CARD_NUMBER_MAX_LENGTH,\n  CARD_EXPIRATION_DATE_MAX_LENGTH,\n  CARD_CVC_MAX_LENGTH,\n  CARD_PASSWORD_MAX_LENGTH,\n  CARD_OWNER_NAME_MAX_LENGTH,\n} from '../../Constants';\nimport './CardForm.scss';\n\nconst CardFormBodyNumber = ({\n  refNumberFirst,\n  refNumberSecond,\n  refNumberThird,\n  refNumberFourth,\n  errorMessage,\n  onChange,\n}: {\n  refNumberFirst: React.MutableRefObject<HTMLInputElement | null>;\n  refNumberSecond: React.MutableRefObject<HTMLInputElement | null>;\n  refNumberThird: React.MutableRefObject<HTMLInputElement | null>;\n  refNumberFourth: React.MutableRefObject<HTMLInputElement | null>;\n  errorMessage: string | undefined;\n  onChange: any;\n}) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-number-container\"\n      inputFormTitle=\"카드번호\"\n      inputFormErrorMessage={errorMessage ? errorMessage : ''}\n    >\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberFirst\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        ref={refNumberFirst}\n      />\n      <span className=\"card-form__body-number-seperator\">-</span>\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberSecond\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        ref={refNumberSecond}\n      />\n      <span className=\"card-form__body-number-seperator\">-</span>\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberThird\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        ref={refNumberThird}\n      />\n      <span className=\"card-form__body-number-seperator\">-</span>\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberFourth\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        ref={refNumberFourth}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormExpirationDate = ({\n  refExpirationDateMonth,\n  refExpirationDateYear,\n  onChange,\n  errorMessage,\n}: {\n  refExpirationDateMonth: React.MutableRefObject<HTMLInputElement | null>;\n  refExpirationDateYear: React.MutableRefObject<HTMLInputElement | null>;\n  onChange: any;\n  errorMessage: string | undefined;\n}) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-expiration-date-container\"\n      inputFormTitle=\"만료일\"\n      inputFormErrorMessage={errorMessage ? errorMessage : ''}\n      containerWidth=\"5.8rem\"\n    >\n      <Input\n        className=\"card-form__body-expiration-date-input\"\n        name=\"expirationDateMonth\"\n        onChange={onChange}\n        width=\"1.5rem\"\n        placeholder=\"MM\"\n        maxLength={CARD_EXPIRATION_DATE_MAX_LENGTH}\n        ref={refExpirationDateMonth}\n      />\n      <span className=\"card-form__body-expiration-date-seperator\">/</span>\n      <Input\n        className=\"card-form__body-expiration-date-input\"\n        name=\"expirationDateYear\"\n        onChange={onChange}\n        width=\"1.5rem\"\n        placeholder=\"YY\"\n        maxLength={CARD_EXPIRATION_DATE_MAX_LENGTH}\n        ref={refExpirationDateYear}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormOwnerName = ({\n  refOwnerName,\n  errorMessage,\n  onChange,\n}: {\n  refOwnerName: React.MutableRefObject<HTMLInputElement | null>;\n  errorMessage: string | undefined;\n  onChange: any;\n}) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-owner-name-container\"\n      inputFormTitle=\"카드 소유자 이름(선택)\"\n      inputFormErrorMessage={errorMessage ? errorMessage : ''}\n    >\n      <Input\n        className=\"card-form__body-owner-name-input\"\n        name=\"ownerName\"\n        onChange={onChange}\n        placeholder=\"카드에 표시된 이름과 동일하게 입력하세요.\"\n        width=\"19rem\"\n        maxLength={CARD_OWNER_NAME_MAX_LENGTH}\n        ref={refOwnerName}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormCVC = ({\n  refCvc,\n  errorMessage,\n  onChange,\n}: {\n  refCvc: React.MutableRefObject<HTMLInputElement | null>;\n  errorMessage: string | undefined;\n  onChange: any;\n}) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-cvc-container\"\n      inputFormTitle=\"보안 코드(CVC/CVV)\"\n      inputFormErrorMessage={errorMessage ? errorMessage : ''}\n      containerWidth=\"3.2rem\"\n    >\n      <Input\n        className=\"card-form__body-cvc-input\"\n        name=\"cvc\"\n        onChange={onChange}\n        placeholder=\"CVC\"\n        width=\"2rem\"\n        maxLength={CARD_CVC_MAX_LENGTH}\n        ref={refCvc}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormPassword = ({\n  refPasswordFirst,\n  refPasswordSecond,\n  refPasswordThird,\n  refPasswordFourth,\n  errorMessage,\n  onChange,\n}: {\n  refPasswordFirst: React.MutableRefObject<HTMLInputElement | null>;\n  refPasswordSecond: React.MutableRefObject<HTMLInputElement | null>;\n  refPasswordThird: React.MutableRefObject<HTMLInputElement | null>;\n  refPasswordFourth: React.MutableRefObject<HTMLInputElement | null>;\n  errorMessage: string | undefined;\n  onChange: any;\n}) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-password-container\"\n      inputFormTitle=\"카드 비밀번호\"\n      inputFormErrorMessage={errorMessage ? errorMessage : ''}\n      containerWidth=\"8.5rem\"\n    >\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordFirst\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={CARD_PASSWORD_MAX_LENGTH}\n        ref={refPasswordFirst}\n      />\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordSecond\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={CARD_PASSWORD_MAX_LENGTH}\n        ref={refPasswordSecond}\n      />\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordThird\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={CARD_PASSWORD_MAX_LENGTH}\n        ref={refPasswordThird}\n      />\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordFourth\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={CARD_PASSWORD_MAX_LENGTH}\n        ref={refPasswordFourth}\n      />\n    </InputForm>\n  );\n};\n\nconst CardCompanyItem = ({ color, name, onClick }: { color: string; name: string; onClick: any }) => {\n  return (\n    <div className=\"card-company-item\">\n      <button\n        className=\"card-company-item__color\"\n        style={{ backgroundColor: color }}\n        onClick={onClick}\n        data-company={name}\n        data-color={color}\n      ></button>\n      <p className=\"card-company-item__name\">{name}</p>\n    </div>\n  );\n};\n\ninterface CardModalProps {\n  color: string;\n  name: string;\n}\n\nconst CardModal = ({ data, onClick }: { data: CardModalProps[]; onClick?: any }) => {\n  return (\n    <Portal>\n      <div className=\"portal\">\n        <div className=\"card-list\">\n          {data.map(({ name, color }) => (\n            <CardCompanyItem key={name} name={name} color={color} onClick={onClick} />\n          ))}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\ninterface CardFormPresenterProps {\n  data: CardModalProps[];\n  cardColor: string;\n  cardHeaderText: string;\n  cardBodyNumberFirst: string;\n  cardBodyNumberSecond: string;\n  cardBodyNumberThird: string;\n  cardBodyNumberFourth: string;\n  cardFooterMonth: string;\n  cardFooterYear: string;\n  cardFooterName: string;\n  openPortal: boolean;\n  handleChangeCardInfo: any;\n  handleClickCardCompanyItem: any;\n  cardBodyNumberErrorMessage?: string;\n  cardFooterNameErrorMessage?: string;\n  cardFooterExpirationDateErrorMessage?: string;\n  cardCVCErrorMessage?: string;\n  cardPasswordErrorMessage?: string;\n  refNumberFirst: React.MutableRefObject<HTMLInputElement | null>;\n  refNumberSecond: React.MutableRefObject<HTMLInputElement | null>;\n  refNumberThird: React.MutableRefObject<HTMLInputElement | null>;\n  refNumberFourth: React.MutableRefObject<HTMLInputElement | null>;\n  refExpirationDateMonth: React.MutableRefObject<HTMLInputElement | null>;\n  refExpirationDateYear: React.MutableRefObject<HTMLInputElement | null>;\n  refOwnerName: React.MutableRefObject<HTMLInputElement | null>;\n  refCvc: React.MutableRefObject<HTMLInputElement | null>;\n  refPasswordFirst: React.MutableRefObject<HTMLInputElement | null>;\n  refPasswordSecond: React.MutableRefObject<HTMLInputElement | null>;\n  refPasswordThird: React.MutableRefObject<HTMLInputElement | null>;\n  refPasswordFourth: React.MutableRefObject<HTMLInputElement | null>;\n}\n\nconst CardFormPresenter = ({\n  data,\n  cardColor,\n  cardHeaderText,\n  cardBodyNumberFirst,\n  cardBodyNumberSecond,\n  cardBodyNumberThird,\n  cardBodyNumberFourth,\n  cardFooterMonth,\n  cardFooterYear,\n  cardFooterName,\n  openPortal,\n  handleChangeCardInfo,\n  handleClickCardCompanyItem,\n  cardBodyNumberErrorMessage,\n  cardFooterNameErrorMessage,\n  cardFooterExpirationDateErrorMessage,\n  cardCVCErrorMessage,\n  cardPasswordErrorMessage,\n  refNumberFirst,\n  refNumberSecond,\n  refNumberThird,\n  refNumberFourth,\n  refExpirationDateMonth,\n  refExpirationDateYear,\n  refOwnerName,\n  refCvc,\n  refPasswordFirst,\n  refPasswordSecond,\n  refPasswordThird,\n  refPasswordFourth,\n}: CardFormPresenterProps) => {\n  return (\n    <div className=\"card-form\">\n      <div className=\"card-form__header\">\n        <Button className=\"card-form__header-button\" type=\"button\">\n          {'<'}\n        </Button>\n        <span className=\"card-form__header-title\">카드 추가</span>\n      </div>\n      <div className=\"card-form__body\">\n        <Card\n          cardColor={cardColor}\n          cardHeaderText={cardHeaderText}\n          cardBodyNumberFirst={cardBodyNumberFirst}\n          cardBodyNumberSecond={cardBodyNumberSecond}\n          cardBodyNumberThird={cardBodyNumberThird}\n          cardBodyNumberFourth={cardBodyNumberFourth}\n          cardFooterMonth={cardFooterMonth}\n          cardFooterYear={cardFooterYear}\n          cardFooterName={cardFooterName}\n        ></Card>\n        <CardFormBodyNumber\n          refNumberFirst={refNumberFirst}\n          refNumberSecond={refNumberSecond}\n          refNumberThird={refNumberThird}\n          refNumberFourth={refNumberFourth}\n          errorMessage={cardBodyNumberErrorMessage}\n          onChange={handleChangeCardInfo}\n        />\n        <CardFormExpirationDate\n          refExpirationDateMonth={refExpirationDateMonth}\n          refExpirationDateYear={refExpirationDateYear}\n          errorMessage={cardFooterExpirationDateErrorMessage}\n          onChange={handleChangeCardInfo}\n        />\n        <CardFormOwnerName\n          refOwnerName={refOwnerName}\n          errorMessage={cardFooterNameErrorMessage}\n          onChange={handleChangeCardInfo}\n        />\n        <CardFormCVC refCvc={refCvc} errorMessage={cardCVCErrorMessage} onChange={handleChangeCardInfo} />\n        <CardFormPassword\n          refPasswordFirst={refPasswordFirst}\n          refPasswordSecond={refPasswordSecond}\n          refPasswordThird={refPasswordThird}\n          refPasswordFourth={refPasswordFourth}\n          errorMessage={cardPasswordErrorMessage}\n          onChange={handleChangeCardInfo}\n        />\n      </div>\n      <div className=\"card-form__footer\">\n        <Button className=\"card-form__footer-button\" type=\"submit\">\n          제출 완료\n        </Button>\n      </div>\n      {openPortal ? <CardModal data={data} onClick={handleClickCardCompanyItem} /> : ''}\n    </div>\n  );\n};\n\nexport default CardFormPresenter;\n","export const CARD_NUMBER_MAX_LENGTH = 4;\nexport const CARD_EXPIRATION_DATE_MAX_LENGTH = 2;\nexport const CARD_CVC_MAX_LENGTH = 3;\nexport const CARD_PASSWORD_MAX_LENGTH = 1;\nexport const CARD_OWNER_NAME_MAX_LENGTH = 18;\n","import React, { useState, useEffect, useRef } from 'react';\nimport CardFormPresenter from './CardFormPresenter';\nimport {\n  CARD_EXPIRATION_DATE_MAX_LENGTH,\n  CARD_NUMBER_MAX_LENGTH,\n  CARD_OWNER_NAME_MAX_LENGTH,\n  CARD_PASSWORD_MAX_LENGTH,\n  CARD_CVC_MAX_LENGTH,\n  ERROR,\n} from '../../Constants';\n\nconst data = [\n  { name: 'NH농협', color: 'yellow' },\n  { name: 'KB국민', color: 'orange' },\n  { name: '신한', color: '#94dacd' },\n  { name: '우리', color: 'skyblue' },\n  { name: '하나', color: '#74bc6d' },\n  { name: 'IBK기업', color: '#547ce4' },\n  { name: 'SC제일', color: 'pink' },\n  { name: '씨티', color: '#e24141' },\n];\n\nconst CardFormContainer = () => {\n  const [cardFormInputs, setCardFormInputs] = useState({\n    companyName: '',\n    companyColor: '',\n    numberFirst: '',\n    numberSecond: '',\n    numberThird: '',\n    numberFourth: '',\n    expirationDateMonth: '',\n    expirationDateYear: '',\n    ownerName: '',\n    cvc: '',\n    passwordFirst: '',\n    passwordSecond: '',\n    passwordThird: '',\n    passwordFourth: '',\n    nickname: '',\n    openPortal: false,\n    errorMessage: {\n      numberFirst: ERROR.VOID_INPUT,\n      numberSecond: ERROR.VOID_INPUT,\n      numberThird: ERROR.VOID_INPUT,\n      numberFourth: ERROR.VOID_INPUT,\n      expirationDateMonth: ERROR.VOID_INPUT,\n      expirationDateYear: ERROR.VOID_INPUT,\n      ownerName: ERROR.VOID_INPUT,\n      cvc: ERROR.VOID_INPUT,\n      passwordFirst: ERROR.VOID_INPUT,\n      passwordSecond: ERROR.VOID_INPUT,\n      passwordThird: ERROR.VOID_INPUT,\n      passwordFourth: ERROR.VOID_INPUT,\n    },\n  });\n\n  const refNumberFirst = useRef<HTMLInputElement>(null);\n  const refNumberSecond = useRef<HTMLInputElement>(null);\n  const refNumberThird = useRef<HTMLInputElement>(null);\n  const refNumberFourth = useRef<HTMLInputElement>(null);\n  const refExpirationDateMonth = useRef<HTMLInputElement>(null);\n  const refExpirationDateYear = useRef<HTMLInputElement>(null);\n  const refOwnerName = useRef<HTMLInputElement>(null);\n  const refCvc = useRef<HTMLInputElement>(null);\n  const refPasswordFirst = useRef<HTMLInputElement>(null);\n  const refPasswordSecond = useRef<HTMLInputElement>(null);\n  const refPasswordThird = useRef<HTMLInputElement>(null);\n  const refPasswordFourth = useRef<HTMLInputElement>(null);\n\n  const nextRef: { [key: string]: React.MutableRefObject<HTMLInputElement | null> } = {\n    numberFirst: refNumberSecond,\n    numberSecond: refNumberThird,\n    numberThird: refNumberFourth,\n    numberFourth: refExpirationDateMonth,\n    expirationDateMonth: refExpirationDateYear,\n    expirationDateYear: refOwnerName,\n    ownerName: refCvc,\n    cvc: refPasswordFirst,\n    passwordFirst: refPasswordSecond,\n    passwordSecond: refPasswordThird,\n    passwordThird: refPasswordFourth,\n  };\n\n  useEffect(() => {\n    if (refNumberFirst.current) {\n      refNumberFirst.current.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (cardFormInputs.numberFirst.length === 4 && cardFormInputs.numberSecond.length === 4) {\n      setCardFormInputs((prev) => ({ ...prev, openPortal: true }));\n    }\n    return () => {\n      setCardFormInputs((prev) => ({ ...prev, openPortal: false }));\n    };\n  }, [cardFormInputs.numberFirst, cardFormInputs.numberSecond]);\n\n  const changeCurrentInput = (target: HTMLInputElement, value: string) => {\n    target.value = value;\n  };\n\n  const checkErrorMessage = (name: string, value: string): string => {\n    // const { numberFirst, numberSecond, numberThird, numberFourth } = cardFormInputs;\n    switch (name) {\n      case 'numberFirst':\n      case 'numberSecond':\n      case 'numberThird':\n      case 'numberFourth':\n        break;\n      case 'expirationDateMonth':\n      case 'expirationDateYear':\n        if (name === 'expirationDateMonth' && (0 >= Number(value) || 12 < Number(value))) {\n          return ERROR.INVALID_EXPIRATION_DATE_MONTH;\n        }\n        break;\n      case 'cvc':\n        break;\n      case 'passwordFirst':\n        break;\n      case 'passwordSecond':\n        break;\n      case 'passwordThird':\n        break;\n      case 'passwordFourth':\n        break;\n      default:\n        return '';\n    }\n    return '';\n  };\n\n  const moveInputFocus = (\n    value: string,\n    name: string,\n    nextRef: { [key: string]: React.MutableRefObject<HTMLInputElement | null> },\n    maxLength: number,\n  ) => {\n    if (value.length === maxLength) {\n      if (nextRef[name]) {\n        nextRef[name].current!.focus();\n      }\n    }\n  };\n\n  const checkValidIntegerInput = (value: string) => {\n    return Number.isSafeInteger(Number(value)) && Number(value) > 0;\n  };\n\n  const checkValidStringInput = (value: string) => {\n    return /^[ㄱ-ㅎ|가-힣|a-z|A-Z|]+$/.test(value);\n  };\n\n  const handleChangeCardInfo = (e: Event) => {\n    const target = e.target as HTMLInputElement;\n    const { value, name } = target;\n    const prevValue = value.substring(0, value.length - 1);\n\n    if (['numberFirst', 'numberSecond', 'numberThird', 'numberFourth'].includes(name)) {\n      if (!checkValidIntegerInput(value)) {\n        changeCurrentInput(target, prevValue);\n        setCardFormInputs((prev) => ({ ...prev, [name]: prevValue }));\n        return;\n      }\n      moveInputFocus(value, name, nextRef, CARD_NUMBER_MAX_LENGTH);\n    } else if (['cvc'].includes(name)) {\n      if (!checkValidIntegerInput(value)) {\n        changeCurrentInput(target, prevValue);\n        setCardFormInputs((prev) => ({ ...prev, [name]: prevValue }));\n        return;\n      }\n      moveInputFocus(value, name, nextRef, CARD_CVC_MAX_LENGTH);\n    } else if (['expirationDateMonth'].includes(name)) {\n      if (!checkValidIntegerInput(value)) {\n        changeCurrentInput(target, prevValue);\n        setCardFormInputs((prev) => ({ ...prev, [name]: prevValue }));\n        return;\n      }\n      moveInputFocus(value, name, nextRef, CARD_EXPIRATION_DATE_MAX_LENGTH);\n    } else if (['expirationDateYear'].includes(name)) {\n      if (!checkValidIntegerInput(value)) {\n        changeCurrentInput(target, prevValue);\n        setCardFormInputs((prev) => ({ ...prev, [name]: prevValue }));\n        return;\n      }\n      moveInputFocus(value, name, nextRef, CARD_EXPIRATION_DATE_MAX_LENGTH);\n    } else if (['ownerName'].includes(name)) {\n      if (!checkValidStringInput(value)) {\n        changeCurrentInput(target, prevValue);\n        setCardFormInputs((prev) => ({ ...prev, [name]: prevValue }));\n        return;\n      }\n      changeCurrentInput(target, value.toUpperCase());\n      moveInputFocus(value, name, nextRef, CARD_OWNER_NAME_MAX_LENGTH);\n    } else if (['passwordFirst', 'passwordSecond', 'passwordThird', 'passwordFourth'].includes(name)) {\n      if (!checkValidIntegerInput(value)) {\n        changeCurrentInput(target, prevValue);\n        setCardFormInputs((prev) => ({ ...prev, [name]: prevValue }));\n        return;\n      }\n      if (target.value.length === 1) {\n        target.value = '*';\n      }\n      moveInputFocus(value, name, nextRef, CARD_PASSWORD_MAX_LENGTH);\n    }\n    setCardFormInputs((prev) => ({\n      ...prev,\n      [name]: value,\n      errorMessage: { ...prev.errorMessage, [name]: checkErrorMessage(name, value) },\n    }));\n  };\n\n  const handleClickCardCompanyItem = (e: any) => {\n    e.persist();\n    setCardFormInputs((prev) => ({\n      ...prev,\n      companyName: e.target.dataset.company,\n      companyColor: e.target.dataset.color,\n      openPortal: false,\n    }));\n  };\n  return (\n    <>\n      <CardFormPresenter\n        data={data}\n        cardColor={cardFormInputs.companyColor}\n        cardHeaderText={cardFormInputs.companyName}\n        cardBodyNumberFirst={cardFormInputs.numberFirst}\n        cardBodyNumberSecond={cardFormInputs.numberSecond}\n        cardBodyNumberThird={cardFormInputs.numberThird}\n        cardBodyNumberFourth={cardFormInputs.numberFourth}\n        cardFooterMonth={cardFormInputs.expirationDateMonth}\n        cardFooterYear={cardFormInputs.expirationDateYear}\n        cardFooterName={cardFormInputs.ownerName}\n        handleChangeCardInfo={handleChangeCardInfo}\n        handleClickCardCompanyItem={handleClickCardCompanyItem}\n        openPortal={cardFormInputs.openPortal}\n        cardBodyNumberErrorMessage={cardFormInputs.errorMessage.numberFirst}\n        cardFooterNameErrorMessage={cardFormInputs.errorMessage.ownerName}\n        cardFooterExpirationDateErrorMessage={cardFormInputs.errorMessage.expirationDateMonth}\n        cardCVCErrorMessage={cardFormInputs.errorMessage.cvc}\n        cardPasswordErrorMessage={cardFormInputs.errorMessage.passwordFirst}\n        refNumberFirst={refNumberFirst}\n        refNumberSecond={refNumberSecond}\n        refNumberThird={refNumberThird}\n        refNumberFourth={refNumberFourth}\n        refExpirationDateMonth={refExpirationDateMonth}\n        refExpirationDateYear={refExpirationDateYear}\n        refOwnerName={refOwnerName}\n        refCvc={refCvc}\n        refPasswordFirst={refPasswordFirst}\n        refPasswordSecond={refPasswordSecond}\n        refPasswordThird={refPasswordThird}\n        refPasswordFourth={refPasswordFourth}\n      />\n      {/* <input placeholder=\"test\" ref={refNumberFirst} /> */}\n    </>\n  );\n};\n\nexport default CardFormContainer;\n","import CardFormContainer from './CardFormContainer';\nexport default CardFormContainer;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport './App.scss';\nimport { ROUTE } from './Constants';\nimport CardForm from './Route/CardForm';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"app__layout\">\n        <Router basename=\"/react-payments\">\n          <Switch>\n            <Route exact path={[ROUTE.HOME, ROUTE.CARD_LIST]}>\n              <CardForm />\n            </Route>\n            <Route path={ROUTE.CARD_FORM}>\n              <CardForm />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}