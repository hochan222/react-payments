{"version":3,"sources":["Components/Button/Button.module.scss","Components/Input/Input.module.scss","Constants/route.tsx","Constants/message.tsx","Components/Card/index.tsx","Components/Button/index.tsx","Components/Input/index.tsx","Components/InputContainer/index.tsx","Components/InputForm/index.tsx","Components/Portal/index.tsx","Route/CardForm/CardFormPresenter.tsx","Route/CardForm/CardFormContainer.tsx","Route/CardForm/index.tsx","App.tsx","index.tsx"],"names":["module","exports","holee-button","input-container","ROUTE","ERROR","CardHeader","_ref","children","react_default","a","createElement","className","CardBody","_ref2","_ref2$cardBodyNumberF","cardBodyNumberFirst","_ref2$cardBodyNumberS","cardBodyNumberSecond","_ref2$cardBodyNumberT","cardBodyNumberThird","_ref2$cardBodyNumberF2","cardBodyNumberFourth","padEnd","repeat","length","join","CardFooter","_ref3","name","month","year","toUpperCase","Card","_ref4","onClick","onKeyUp","cardColor","cardHeaderText","cardFooterName","cardFooterMonth","cardFooterYear","rest","Object","objectWithoutProperties","_excluded","color","assign","role","tabIndex","style","backgroundColor","Card_CardHeader","Card_CardBody","Card_CardFooter","cx","classNames","bind","styles","Button","_ref$type","type","Button_excluded","Input","_ref$className","_ref$name","onChange","_ref$placeholder","placeholder","_ref$width","width","maxLength","concat","InputContainer","InputForm","inputContainerClassName","inputFormTitle","inputFormErrorMessage","containerWidth","Components_InputContainer_InputContainer","Portal","selector","$modalRoot","document","getElementById","el","useEffect","appendChild","removeChild","ReactDOM","createPortal","CardFormBodyNumber","errorMessage","Components_InputForm_InputForm","Input_Input","CardFormExpirationDate","CardFormOwnerName","CardFormCVC","CardFormPassword","_ref5","CardCompanyItem","_ref6","data-company","data-color","CardModal","_ref7","data","Portal_Portal","map","_ref8","CardFormPresenter_CardCompanyItem","key","CardFormPresenter","_ref9","openPortal","handleChangeCardInfo","handleClickCardCompanyItem","cardBodyNumberErrorMessage","cardFooterNameErrorMessage","cardFooterExpirationDateErrorMessage","cardCVCErrorMessage","cardPasswordErrorMessage","Button_Button","Components_Card_Card","CardFormPresenter_CardFormBodyNumber","CardFormPresenter_CardFormExpirationDate","CardFormPresenter_CardFormOwnerName","CardFormPresenter_CardFormCVC","CardFormPresenter_CardFormPassword","CardFormPresenter_CardModal","CardFormContainer","_useState","useState","companyName","companyColor","numberFirst","numberSecond","numberThird","numberFourth","expirationDateMonth","expirationDateYear","ownerName","cvc","passwordFirst","passwordSecond","passwordThird","passwordFourth","nickname","_useState2","slicedToArray","cardFormInputs","setCardFormInputs","prev","objectSpread2","changeCurrentInput","target","value","CardForm_CardFormPresenter","e","prevValue","substring","includes","Number","isSafeInteger","defineProperty","test","_objectSpread7","checkErrorMessage","persist","dataset","company","App","react_router_dom","basename","react_router","exact","path","Route_CardForm","render","src_App_0"],"mappings":"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","file":"static/js/main.34ef4f47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"holee-button\":\"Button_holee-button__2lOsu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-container\":\"Input_input-container__zY7Fz\"};","export const ROUTE = {\n  HOME: '/',\n  CARD_LIST: '/cardList',\n  CARD_FORM: '/cardForm',\n  CARD_FORM_COMPLETE: '/cardForm/Complete',\n};\n","export const ERROR = {\n  VOID_INPUT: '빈칸을 모두 입력해주세요.',\n  INVALID_EXPIRATION_DATE_MONTH: '유효한 달을 입력해주세요.',\n};\n","import React, { ReactNode } from 'react';\nimport './Card.scss';\n\nconst CardHeader = ({ children }: { children: string | undefined }) => {\n  return (\n    <div className=\"card-header\">\n      <div className=\"card-header__text\">{children ? children : ''} 카드</div>\n    </div>\n  );\n};\n\ninterface CardBodyProps {\n  cardBodyNumberFirst: string | undefined;\n  cardBodyNumberSecond: string | undefined;\n  cardBodyNumberThird: string | undefined;\n  cardBodyNumberFourth: string | undefined;\n}\n\nconst CardBody = ({\n  cardBodyNumberFirst = '',\n  cardBodyNumberSecond = '',\n  cardBodyNumberThird = '',\n  cardBodyNumberFourth = '',\n}: CardBodyProps) => {\n  return (\n    <div className=\"card-body\">\n      <div className=\"card-body__ic-chip\"></div>\n      <div className=\"card-body__number\">\n        {[\n          cardBodyNumberFirst.padEnd(4, '_'),\n          '-',\n          cardBodyNumberSecond.padEnd(4, '_'),\n          '-',\n          '*'.repeat(cardBodyNumberThird.length).padEnd(4, '_'),\n          '-',\n          '*'.repeat(cardBodyNumberFourth.length).padEnd(4, '_'),\n        ].join('')}\n      </div>\n    </div>\n  );\n};\n\ninterface CardFooterProps {\n  name: string | undefined;\n  month: string | undefined;\n  year: string | undefined;\n}\n\nconst CardFooter = ({ name, month, year }: CardFooterProps) => {\n  return (\n    <div className=\"card-footer\">\n      <span className=\"card-footer__name\">{name ? name.toUpperCase() : 'NAME'}</span>\n      <span className=\"card-footer__expiration-date\">\n        {month ? month : 'MM'}/{year ? year : 'YY'}\n      </span>\n    </div>\n  );\n};\n\n// type?: 'preview' | 'modify' | undefined;\nexport interface CardProps {\n  children?: ReactNode;\n  className?: string;\n  onClick?: any;\n  onKeyUp?: any;\n  cardColor: string;\n  cardHeaderText?: string;\n  cardBodyNumberFirst: string | undefined;\n  cardBodyNumberSecond: string | undefined;\n  cardBodyNumberThird: string | undefined;\n  cardBodyNumberFourth: string | undefined;\n  cardFooterName: string | undefined;\n  cardFooterMonth: string | undefined;\n  cardFooterYear: string | undefined;\n}\n\nexport const Card = ({\n  onClick,\n  onKeyUp,\n  cardColor,\n  cardHeaderText,\n  cardBodyNumberFirst,\n  cardBodyNumberSecond,\n  cardBodyNumberThird,\n  cardBodyNumberFourth,\n  cardFooterName,\n  cardFooterMonth,\n  cardFooterYear,\n  ...rest\n}: CardProps) => {\n  const color = cardColor ? cardColor : '#d2d2d2';\n  return (\n    <div\n      className=\"card\"\n      onClick={onClick}\n      role=\"button\"\n      tabIndex={0}\n      onKeyUp={onKeyUp}\n      style={{ backgroundColor: color }}\n      {...rest}\n    >\n      <CardHeader>{cardHeaderText}</CardHeader>\n      <CardBody\n        cardBodyNumberFirst={cardBodyNumberFirst}\n        cardBodyNumberSecond={cardBodyNumberSecond}\n        cardBodyNumberThird={cardBodyNumberThird}\n        cardBodyNumberFourth={cardBodyNumberFourth}\n      ></CardBody>\n      <CardFooter name={cardFooterName} month={cardFooterMonth} year={cardFooterYear}></CardFooter>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './Button.module.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nexport interface ButtonOptions {\n  className?: string;\n  type?: 'button' | 'submit' | 'reset';\n  // onClick?: ((event: React.MouseEvent<HTMLButtonElement>) => void) | undefined;\n  // onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onClick?: any;\n  isDisabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport const Button = ({ className, type = 'submit', children, onClick, ...rest }: ButtonOptions) => {\n  return (\n    <button className={cx('holee-button', className)} type={type} onClick={onClick} {...rest}>\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\n// import React, { forwardRef } from 'react';\n\nimport styles from './Input.module.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\nconst INPUT_MAXLENGTH = 1000;\n\nexport interface InputProps {\n  className?: string | undefined;\n  name?: string | undefined;\n  placeholder?: string | undefined;\n  width?: string | undefined;\n  onChange?: any;\n  maxLength?: number;\n  type?:\n    | 'button'\n    | 'checkbox'\n    | 'color'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'file'\n    | 'hidden'\n    | 'image'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'radio'\n    | 'range'\n    | 'reset'\n    | 'search'\n    | 'submit'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week'\n    | 'datetime';\n}\n\n// const Input = forwardRef(({ className = '', placeholder = '', width = '' }: InputProps, ref: any) => {\n//   return (\n//     <input\n//       className={cx('input-container', className)}\n//       placeholder={placeholder}\n//       style={{ width: `${width}` }}\n//       ref={ref}\n//     />\n//   );\n// });\n\n// Input.displayName = 'holee-input';\n\nconst Input = ({\n  className = '',\n  name = '',\n  onChange,\n  placeholder = '',\n  width = '',\n  maxLength,\n  type = 'text',\n}: InputProps) => {\n  return (\n    <input\n      className={cx('input-container', className)}\n      name={name}\n      onChange={onChange}\n      placeholder={placeholder}\n      style={{ width: `${width}` }}\n      type={type}\n      maxLength={maxLength ? maxLength : INPUT_MAXLENGTH}\n    />\n  );\n};\n\nexport { Input };\n","import React, { ReactNode } from 'react';\nimport './InputContainer.scss';\n\nexport interface InputContainerProps {\n  children?: ReactNode | undefined;\n  className?: string | undefined;\n  width?: string | undefined;\n}\n\nexport const InputContainer = ({ children, className, width = '100%' }: InputContainerProps) => {\n  return (\n    <div className={`input-container ${className}`} style={{ width: `${width}` }}>\n      {children}\n    </div>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport './InputForm.scss';\nimport { InputContainer } from '../InputContainer';\n\nexport interface InputFormProps {\n  children?: ReactNode | undefined;\n  className?: string | undefined;\n  inputContainerClassName?: string | undefined;\n  inputFormTitle?: string | undefined;\n  inputFormErrorMessage?: string | undefined;\n  containerWidth?: string | undefined;\n}\n\nexport const InputForm = ({\n  children,\n  inputContainerClassName,\n  inputFormTitle,\n  inputFormErrorMessage,\n  containerWidth,\n}: InputFormProps) => {\n  return (\n    <div className=\"input-form\">\n      <div className=\"input-form__header\">\n        <label className=\"input-form__header-title\">{inputFormTitle}</label>\n        <span className=\"input-form__header-validation-message\">{inputFormErrorMessage}</span>\n      </div>\n      <InputContainer className={inputContainerClassName} width={containerWidth}>\n        {children}\n      </InputContainer>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './portal.scss';\n\nconst Portal = ({ children }: { children?: React.ReactNode }) => {\n  const $ = (selector: string) => document.getElementById(selector);\n  const $modalRoot = $('portal-root') as HTMLDivElement;\n\n  const el = document.createElement('div');\n  useEffect(() => {\n    $modalRoot.appendChild(el);\n    return () => {\n      $modalRoot.removeChild(el);\n    };\n  }, [el]);\n  return ReactDOM.createPortal(children, el);\n};\n\nexport { Portal };\n","import React from 'react';\nimport { Card, Button, Input, InputForm, Portal } from '../../Components';\nimport './CardForm.scss';\n\nconst CardFormBodyNumber = ({ errorMessage, onChange }: { errorMessage: string | undefined; onChange: any }) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-number-container\"\n      inputFormTitle=\"카드번호\"\n      inputFormErrorMessage={errorMessage ? errorMessage : ''}\n    >\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberFirst\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={4}\n      />\n      <span className=\"card-form__body-number-seperator\">-</span>\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberSecond\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={4}\n      />\n      <span className=\"card-form__body-number-seperator\">-</span>\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberThird\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={4}\n      />\n      <span className=\"card-form__body-number-seperator\">-</span>\n      <Input\n        className=\"card-form__body-number-input\"\n        name=\"numberFourth\"\n        onChange={onChange}\n        placeholder=\"_ _ _ _\"\n        maxLength={4}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormExpirationDate = ({ onChange, errorMessage }: { onChange: any; errorMessage: string | undefined }) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-expiration-date-container\"\n      inputFormTitle=\"만료일\"\n      inputFormErrorMessage={errorMessage ? errorMessage : ''}\n      containerWidth=\"5.8rem\"\n    >\n      <Input\n        className=\"card-form__body-expiration-date-input\"\n        name=\"expirationDateMonth\"\n        onChange={onChange}\n        width=\"1.5rem\"\n        placeholder=\"MM\"\n        maxLength={2}\n      />\n      <span className=\"card-form__body-expiration-date-seperator\">/</span>\n      <Input\n        className=\"card-form__body-expiration-date-input\"\n        name=\"expirationDateYear\"\n        onChange={onChange}\n        width=\"1.5rem\"\n        placeholder=\"YY\"\n        maxLength={2}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormOwnerName = ({ errorMessage, onChange }: { errorMessage: string | undefined; onChange: any }) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-owner-name-container\"\n      inputFormTitle=\"카드 소유자 이름(선택)\"\n      inputFormErrorMessage={errorMessage ? errorMessage : ''}\n    >\n      <Input\n        className=\"card-form__body-owner-name-input\"\n        name=\"ownerName\"\n        onChange={onChange}\n        placeholder=\"카드에 표시된 이름과 동일하게 입력하세요.\"\n        width=\"19rem\"\n        maxLength={18}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormCVC = ({ errorMessage, onChange }: { errorMessage: string | undefined; onChange: any }) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-cvc-container\"\n      inputFormTitle=\"보안 코드(CVC/CVV)\"\n      inputFormErrorMessage={errorMessage ? errorMessage : ''}\n      containerWidth=\"3.2rem\"\n    >\n      <Input\n        className=\"card-form__body-cvc-input\"\n        name=\"cvc\"\n        onChange={onChange}\n        placeholder=\"CVC\"\n        width=\"2rem\"\n        maxLength={3}\n      />\n    </InputForm>\n  );\n};\n\nconst CardFormPassword = ({ errorMessage, onChange }: { errorMessage: string | undefined; onChange: any }) => {\n  return (\n    <InputForm\n      inputContainerClassName=\"card-form__body-password-container\"\n      inputFormTitle=\"카드 비밀번호\"\n      inputFormErrorMessage={errorMessage ? errorMessage : ''}\n      containerWidth=\"8.5rem\"\n    >\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordFirst\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={1}\n      />\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordSecond\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={1}\n      />\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordThird\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={1}\n      />\n      <Input\n        className=\"card-form__body-password-input\"\n        name=\"passwordFourth\"\n        onChange={onChange}\n        placeholder=\"_\"\n        width=\"1rem\"\n        maxLength={1}\n      />\n    </InputForm>\n  );\n};\n\nconst CardCompanyItem = ({ color, name, onClick }: { color: string; name: string; onClick: any }) => {\n  return (\n    <div className=\"card-company-item\">\n      <button\n        className=\"card-company-item__color\"\n        style={{ backgroundColor: color }}\n        onClick={onClick}\n        data-company={name}\n        data-color={color}\n      ></button>\n      <p className=\"card-company-item__name\">{name}</p>\n    </div>\n  );\n};\n\ninterface CardModalProps {\n  color: string;\n  name: string;\n}\n\nconst CardModal = ({ data, onClick }: { data: CardModalProps[]; onClick?: any }) => {\n  return (\n    <Portal>\n      <div className=\"portal\">\n        <div className=\"card-list\">\n          {data.map(({ name, color }) => (\n            <CardCompanyItem key={name} name={name} color={color} onClick={onClick} />\n          ))}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\ninterface CardFormPresenterProps {\n  data: CardModalProps[];\n  cardColor: string;\n  cardHeaderText: string;\n  cardBodyNumberFirst: string;\n  cardBodyNumberSecond: string;\n  cardBodyNumberThird: string;\n  cardBodyNumberFourth: string;\n  cardFooterMonth: string;\n  cardFooterYear: string;\n  cardFooterName: string;\n  openPortal: boolean;\n  handleChangeCardInfo: any;\n  handleClickCardCompanyItem: any;\n  cardBodyNumberErrorMessage?: string;\n  cardFooterNameErrorMessage?: string;\n  cardFooterExpirationDateErrorMessage?: string;\n  cardCVCErrorMessage?: string;\n  cardPasswordErrorMessage?: string;\n}\n\nconst CardFormPresenter = ({\n  data,\n  cardColor,\n  cardHeaderText,\n  cardBodyNumberFirst,\n  cardBodyNumberSecond,\n  cardBodyNumberThird,\n  cardBodyNumberFourth,\n  cardFooterMonth,\n  cardFooterYear,\n  cardFooterName,\n  openPortal,\n  handleChangeCardInfo,\n  handleClickCardCompanyItem,\n  cardBodyNumberErrorMessage,\n  cardFooterNameErrorMessage,\n  cardFooterExpirationDateErrorMessage,\n  cardCVCErrorMessage,\n  cardPasswordErrorMessage,\n}: CardFormPresenterProps) => {\n  return (\n    <div className=\"card-form\">\n      <div className=\"card-form__header\">\n        <Button className=\"card-form__header-button\" type=\"button\">\n          {'<'}\n        </Button>\n        <span className=\"card-form__header-title\">카드 추가</span>\n      </div>\n      <div className=\"card-form__body\">\n        <Card\n          cardColor={cardColor}\n          cardHeaderText={cardHeaderText}\n          cardBodyNumberFirst={cardBodyNumberFirst}\n          cardBodyNumberSecond={cardBodyNumberSecond}\n          cardBodyNumberThird={cardBodyNumberThird}\n          cardBodyNumberFourth={cardBodyNumberFourth}\n          cardFooterMonth={cardFooterMonth}\n          cardFooterYear={cardFooterYear}\n          cardFooterName={cardFooterName}\n        ></Card>\n        <CardFormBodyNumber errorMessage={cardBodyNumberErrorMessage} onChange={handleChangeCardInfo} />\n        <CardFormExpirationDate errorMessage={cardFooterExpirationDateErrorMessage} onChange={handleChangeCardInfo} />\n        <CardFormOwnerName errorMessage={cardFooterNameErrorMessage} onChange={handleChangeCardInfo} />\n        <CardFormCVC errorMessage={cardCVCErrorMessage} onChange={handleChangeCardInfo} />\n        <CardFormPassword errorMessage={cardPasswordErrorMessage} onChange={handleChangeCardInfo} />\n      </div>\n      <div className=\"card-form__footer\">\n        <Button className=\"card-form__footer-button\" type=\"submit\">\n          제출 완료\n        </Button>\n      </div>\n      {openPortal ? <CardModal data={data} onClick={handleClickCardCompanyItem} /> : ''}\n    </div>\n  );\n};\n\nexport default CardFormPresenter;\n","import React, { useState, useEffect } from 'react';\nimport CardFormPresenter from './CardFormPresenter';\nimport { ERROR } from '../../Constants';\n\nconst data = [\n  { name: 'NH농협', color: 'yellow' },\n  { name: 'KB국민', color: 'orange' },\n  { name: '신한', color: '#94dacd' },\n  { name: '우리', color: 'skyblue' },\n  { name: '하나', color: '#74bc6d' },\n  { name: 'IBK기업', color: '#547ce4' },\n  { name: 'SC제일', color: 'pink' },\n  { name: '씨티', color: '#e24141' },\n];\n\nconst CardFormContainer = () => {\n  const [cardFormInputs, setCardFormInputs] = useState({\n    companyName: '',\n    companyColor: '',\n    numberFirst: '',\n    numberSecond: '',\n    numberThird: '',\n    numberFourth: '',\n    expirationDateMonth: '',\n    expirationDateYear: '',\n    ownerName: '',\n    cvc: '',\n    passwordFirst: '',\n    passwordSecond: '',\n    passwordThird: '',\n    passwordFourth: '',\n    nickname: '',\n    openPortal: false,\n    errorMessage: {\n      numberFirst: ERROR.VOID_INPUT,\n      numberSecond: ERROR.VOID_INPUT,\n      numberThird: ERROR.VOID_INPUT,\n      numberFourth: ERROR.VOID_INPUT,\n      expirationDateMonth: ERROR.VOID_INPUT,\n      expirationDateYear: ERROR.VOID_INPUT,\n      ownerName: ERROR.VOID_INPUT,\n      cvc: ERROR.VOID_INPUT,\n      passwordFirst: ERROR.VOID_INPUT,\n      passwordSecond: ERROR.VOID_INPUT,\n      passwordThird: ERROR.VOID_INPUT,\n      passwordFourth: ERROR.VOID_INPUT,\n    },\n  });\n\n  useEffect(() => {\n    if (cardFormInputs.numberFirst.length === 4 && cardFormInputs.numberSecond.length === 4) {\n      setCardFormInputs((prev) => ({ ...prev, openPortal: true }));\n    }\n    return () => {\n      setCardFormInputs((prev) => ({ ...prev, openPortal: false }));\n    };\n  }, [cardFormInputs.numberFirst, cardFormInputs.numberSecond]);\n\n  const changeCurrentInput = (target: HTMLInputElement, value: string) => {\n    target.value = value;\n  };\n\n  const checkErrorMessage = (name: string, value: string): string => {\n    // const { numberFirst, numberSecond, numberThird, numberFourth } = cardFormInputs;\n    switch (name) {\n      case 'numberFirst':\n      case 'numberSecond':\n      case 'numberThird':\n      case 'numberFourth':\n        break;\n      case 'expirationDateMonth':\n      case 'expirationDateYear':\n        if (name === 'expirationDateMonth' && (0 >= Number(value) || 12 < Number(value))) {\n          return ERROR.INVALID_EXPIRATION_DATE_MONTH;\n        }\n        break;\n      case 'cvc':\n        break;\n      case 'passwordFirst':\n        break;\n      case 'passwordSecond':\n        break;\n      case 'passwordThird':\n        break;\n      case 'passwordFourth':\n        break;\n      default:\n        return '';\n    }\n    return '';\n  };\n\n  const handleChangeCardInfo = (e: Event) => {\n    const target = e.target as HTMLInputElement;\n    const { value, name } = target;\n    const prevValue = value.substring(0, value.length - 1);\n\n    if (\n      [\n        'numberFirst',\n        'numberSecond',\n        'numberThird',\n        'numberFourth',\n        'cvc',\n        'passwordFirst',\n        'passwordSecond',\n        'passwordThird',\n        'passwordFourth',\n      ].includes(name)\n    ) {\n      if (!(Number.isSafeInteger(Number(value)) && Number(value) > 0)) {\n        changeCurrentInput(target, prevValue);\n        setCardFormInputs((prev) => ({ ...prev, [name]: prevValue }));\n        return;\n      }\n    } else if (['expirationDateMonth'].includes(name)) {\n      if (!(Number.isSafeInteger(Number(value)) && Number(value) > 0)) {\n        changeCurrentInput(target, prevValue);\n        setCardFormInputs((prev) => ({ ...prev, [name]: prevValue }));\n        return;\n      }\n    } else if (['expirationDateYear'].includes(name)) {\n      if (!(Number.isSafeInteger(Number(value)) && Number(value) > 0)) {\n        changeCurrentInput(target, prevValue);\n        setCardFormInputs((prev) => ({ ...prev, [name]: prevValue }));\n        return;\n      }\n    } else if (['ownerName'].includes(name)) {\n      if (!/^[ㄱ-ㅎ|가-힣|a-z|A-Z|]+$/.test(value)) {\n        changeCurrentInput(target, prevValue);\n        setCardFormInputs((prev) => ({ ...prev, [name]: prevValue }));\n        return;\n      }\n      changeCurrentInput(target, value.toUpperCase());\n    }\n    setCardFormInputs((prev) => ({\n      ...prev,\n      [name]: value,\n      errorMessage: { ...prev.errorMessage, [name]: checkErrorMessage(name, value) },\n    }));\n  };\n\n  const handleClickCardCompanyItem = (e: any) => {\n    e.persist();\n    setCardFormInputs((prev) => ({\n      ...prev,\n      companyName: e.target.dataset.company,\n      companyColor: e.target.dataset.color,\n      openPortal: false,\n    }));\n  };\n  return (\n    <CardFormPresenter\n      data={data}\n      cardColor={cardFormInputs.companyColor}\n      cardHeaderText={cardFormInputs.companyName}\n      cardBodyNumberFirst={cardFormInputs.numberFirst}\n      cardBodyNumberSecond={cardFormInputs.numberSecond}\n      cardBodyNumberThird={cardFormInputs.numberThird}\n      cardBodyNumberFourth={cardFormInputs.numberFourth}\n      cardFooterMonth={cardFormInputs.expirationDateMonth}\n      cardFooterYear={cardFormInputs.expirationDateYear}\n      cardFooterName={cardFormInputs.ownerName}\n      handleChangeCardInfo={handleChangeCardInfo}\n      handleClickCardCompanyItem={handleClickCardCompanyItem}\n      openPortal={cardFormInputs.openPortal}\n      cardBodyNumberErrorMessage={cardFormInputs.errorMessage.numberFirst}\n      cardFooterNameErrorMessage={cardFormInputs.errorMessage.ownerName}\n      cardFooterExpirationDateErrorMessage={cardFormInputs.errorMessage.expirationDateMonth}\n      cardCVCErrorMessage={cardFormInputs.errorMessage.cvc}\n      cardPasswordErrorMessage={cardFormInputs.errorMessage.passwordFirst}\n    />\n  );\n};\n\nexport default CardFormContainer;\n","import CardFormContainer from './CardFormContainer';\nexport default CardFormContainer;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport './App.scss';\nimport { ROUTE } from './Constants';\nimport CardForm from './Route/CardForm';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"app__layout\">\n        <Router basename=\"/react-payments\">\n          <Switch>\n            <Route exact path={[ROUTE.HOME, ROUTE.CARD_LIST]}>\n              <CardForm />\n            </Route>\n            <Route path={ROUTE.CARD_FORM}>\n              <CardForm />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}